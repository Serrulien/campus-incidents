/**
 * Campus Incident API Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fil.eservices.campusincident.data.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

@ApiModel(description = "")
public class Incident implements Serializable {

  @SerializedName("author")
  private String author = null;
  @SerializedName("categories")
  private List<Category> categories = null;
  @SerializedName("createdAt")
  private Date createdAt = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("geolocation")
  private Geolocation geolocation = null;
  @SerializedName("id")
  private Long id = null;
  @SerializedName("imageId")
  private Long imageId = null;
  @SerializedName("location")
  private Location location = null;
  @SerializedName("status")
  private String status = null;
  @SerializedName("title")
  private String title = null;

  /**
   * email
   **/
  @ApiModelProperty(required = true, value = "email")
  public String getAuthor() {
    return author;
  }
  public void setAuthor(String author) {
    this.author = author;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Category> getCategories() {
    return categories;
  }
  public void setCategories(List<Category> categories) {
    this.categories = categories;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Date getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Geolocation getGeolocation() {
    return geolocation;
  }
  public void setGeolocation(Geolocation geolocation) {
    this.geolocation = geolocation;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getImageId() {
    return imageId;
  }
  public void setImageId(Long id) {
    this.imageId = id;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Location getLocation() {
    return location;
  }
  public void setLocation(Location location) {
    this.location = location;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getStatus() {
    return status;
  }
  public void setStatus(String status) {
    this.status = status;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Incident incident = (Incident) o;
    return (this.author == null ? incident.author == null : this.author.equals(incident.author)) &&
            (this.categories == null ? incident.categories == null : this.categories.equals(incident.categories)) &&
            (this.createdAt == null ? incident.createdAt == null : this.createdAt.equals(incident.createdAt)) &&
            (this.description == null ? incident.description == null : this.description.equals(incident.description)) &&
            (this.geolocation == null ? incident.geolocation == null : this.geolocation.equals(incident.geolocation)) &&
            (this.id == null ? incident.id == null : this.id.equals(incident.id)) &&
            (this.location == null ? incident.location == null : this.location.equals(incident.location)) &&
            (this.status == null ? incident.status == null : this.status.equals(incident.status)) &&
            (this.title == null ? incident.title == null : this.title.equals(incident.title));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.author == null ? 0: this.author.hashCode());
    result = 31 * result + (this.categories == null ? 0: this.categories.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.geolocation == null ? 0: this.geolocation.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.location == null ? 0: this.location.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.title == null ? 0: this.title.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Incident {\n");

    sb.append("  author: ").append(author).append("\n");
    sb.append("  categories: ").append(categories).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  geolocation: ").append(geolocation).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  location: ").append(location).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  title: ").append(title).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
