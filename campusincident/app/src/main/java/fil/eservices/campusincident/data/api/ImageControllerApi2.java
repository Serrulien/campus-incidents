/**
 * Campus Incident API Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fil.eservices.campusincident.data.api;

import android.util.Log;

import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.google.gson.Gson;

import org.apache.http.HttpEntity;
import org.apache.http.entity.mime.HttpMultipartMode;
import org.apache.http.entity.mime.MultipartEntityBuilder;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;

import fil.eservices.campusincident.data.ApiException;
import fil.eservices.campusincident.data.ApiInvoker;
import fil.eservices.campusincident.data.JsonUtil;
import fil.eservices.campusincident.data.Pair;
import fil.eservices.campusincident.data.model.ImageSaved;
import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.MediaType;
import okhttp3.MultipartBody;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;

public class ImageControllerApi2 {
  String url = "http://54.38.242.184:8080/images";
  OkHttpClient client = new OkHttpClient();

  /**
   * handleFileUpload
   *
   * @param file file
   */
  public void handleFileUploadUsingPOST (File file, final Response.Listener<ImageSaved> responseListener, final Response.ErrorListener errorListener) {
    RequestBody requestBody = new MultipartBody.Builder().setType(MultipartBody.FORM)
            .addFormDataPart("file", file.getName(), RequestBody.create(MediaType.parse("image/jpeg"), file))
            .build();

    Request request = new Request.Builder()
            .url(url)
            .post(requestBody)
            .build();

    client.newCall(request).enqueue(new Callback() {
      @Override
      public void onFailure(Call call, IOException e) {
        errorListener.onErrorResponse(new VolleyError(e));
      }

      @Override
      public void onResponse(Call call, okhttp3.Response response) throws IOException {
        String content = response.body().string();
          Log.e("PPP", content);
          responseListener.onResponse(new Gson().fromJson(content, ImageSaved.class));
      }
    });
  }
}
